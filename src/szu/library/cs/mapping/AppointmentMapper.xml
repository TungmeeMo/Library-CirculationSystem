<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="szu.library.cs.dao.AppointmentMapper" >
  <resultMap id="BaseResultMap" type="szu.library.cs.pojo.Appointment" >
    <id column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="reader_id" property="readerId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="appointment_date" property="appointmentDate" jdbcType="TIMESTAMP" />
    <result column="Receive_book_date" property="receiveBookDate" jdbcType="TIMESTAMP" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
    <result column="Borrow_date" property="borrowDate" jdbcType="TIMESTAMP" />
    <result column="Cancle_date" property="cancleDate" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    appointment_id, reader_id, book_id, appointment_date, Receive_book_date, deadline, 
    Borrow_date, Cancle_date, phone, email, ip, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from appointment_t
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from appointment_t
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="szu.library.cs.pojo.Appointment" >
    insert into appointment_t (appointment_id, reader_id, book_id, 
      appointment_date, Receive_book_date, deadline, 
      Borrow_date, Cancle_date, phone, 
      email, ip, status)
    values (#{appointmentId,jdbcType=INTEGER}, #{readerId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{appointmentDate,jdbcType=TIMESTAMP}, #{receiveBookDate,jdbcType=TIMESTAMP}, #{deadline,jdbcType=TIMESTAMP}, 
      #{borrowDate,jdbcType=TIMESTAMP}, #{cancleDate,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="szu.library.cs.pojo.Appointment" >
    insert into appointment_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appointmentId != null" >
        appointment_id,
      </if>
      <if test="readerId != null" >
        reader_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="appointmentDate != null" >
        appointment_date,
      </if>
      <if test="receiveBookDate != null" >
        Receive_book_date,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="borrowDate != null" >
        Borrow_date,
      </if>
      <if test="cancleDate != null" >
        Cancle_date,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appointmentId != null" >
        #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        #{readerId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="appointmentDate != null" >
        #{appointmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveBookDate != null" >
        #{receiveBookDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowDate != null" >
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cancleDate != null" >
        #{cancleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="szu.library.cs.pojo.Appointment" >
    update appointment_t
    <set >
      <if test="readerId != null" >
        reader_id = #{readerId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="appointmentDate != null" >
        appointment_date = #{appointmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveBookDate != null" >
        Receive_book_date = #{receiveBookDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowDate != null" >
        Borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cancleDate != null" >
        Cancle_date = #{cancleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="szu.library.cs.pojo.Appointment" >
    update appointment_t
    set reader_id = #{readerId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      appointment_date = #{appointmentDate,jdbcType=TIMESTAMP},
      Receive_book_date = #{receiveBookDate,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      Borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      Cancle_date = #{cancleDate,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
  </update>
</mapper>