<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="szu.library.cs.dao.PaymentMapper" >
  <resultMap id="BaseResultMap" type="szu.library.cs.pojo.Payment" >
    <id column="payment_id" property="paymentId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="payment_date" property="paymentDate" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="work_sate" property="workSate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    payment_id, account_id, item_id, payment_date, amount, payment, item_name, staff_id, 
    work_sate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payment_t
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payment_t
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="szu.library.cs.pojo.Payment" >
    insert into payment_t (payment_id, account_id, item_id, 
      payment_date, amount, payment, 
      item_name, staff_id, work_sate
      )
    values (#{paymentId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, 
      #{paymentDate,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, #{payment,jdbcType=DECIMAL}, 
      #{itemName,jdbcType=VARCHAR}, #{staffId,jdbcType=INTEGER}, #{workSate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="szu.library.cs.pojo.Payment" >
    insert into payment_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="paymentDate != null" >
        payment_date,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="workSate != null" >
        work_sate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paymentId != null" >
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="paymentDate != null" >
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="workSate != null" >
        #{workSate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="szu.library.cs.pojo.Payment" >
    update payment_t
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="paymentDate != null" >
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="workSate != null" >
        work_sate = #{workSate,jdbcType=VARCHAR},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="szu.library.cs.pojo.Payment" >
    update payment_t
    set account_id = #{accountId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=DECIMAL},
      item_name = #{itemName,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=INTEGER},
      work_sate = #{workSate,jdbcType=VARCHAR}
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </update>
</mapper>