<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="szu.library.cs.dao.CirculationMapper" >
  <resultMap id="BaseResultMap" type="szu.library.cs.pojo.Circulation" >
    <id column="borrow_id" property="borrowId" jdbcType="INTEGER" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="reader_id" property="readerId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="borrow_date" property="borrowDate" jdbcType="TIMESTAMP" />
    <result column="return_date" property="returnDate" jdbcType="TIMESTAMP" />
    <result column="expect_date" property="expectDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="continue_times" property="continueTimes" jdbcType="INTEGER" />
    <result column="operation_type" property="operationType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    borrow_id, staff_id, reader_id, book_id, borrow_date, return_date, expect_date, status, 
    continue_times, operation_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from circulation_t
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from circulation_t
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="szu.library.cs.pojo.Circulation" >
    insert into circulation_t (borrow_id, staff_id, reader_id, 
      book_id, borrow_date, return_date, 
      expect_date, status, continue_times, 
      operation_type)
    values (#{borrowId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{readerId,jdbcType=INTEGER}, 
      #{bookId,jdbcType=VARCHAR}, #{borrowDate,jdbcType=TIMESTAMP}, #{returnDate,jdbcType=TIMESTAMP}, 
      #{expectDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{continueTimes,jdbcType=INTEGER}, 
      #{operationType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="szu.library.cs.pojo.Circulation" >
    insert into circulation_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="readerId != null" >
        reader_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="borrowDate != null" >
        borrow_date,
      </if>
      <if test="returnDate != null" >
        return_date,
      </if>
      <if test="expectDate != null" >
        expect_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="continueTimes != null" >
        continue_times,
      </if>
      <if test="operationType != null" >
        operation_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        #{readerId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null" >
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expectDate != null" >
        #{expectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="continueTimes != null" >
        #{continueTimes,jdbcType=INTEGER},
      </if>
      <if test="operationType != null" >
        #{operationType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="szu.library.cs.pojo.Circulation" >
    update circulation_t
    <set >
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        reader_id = #{readerId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null" >
        borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        return_date = #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expectDate != null" >
        expect_date = #{expectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="continueTimes != null" >
        continue_times = #{continueTimes,jdbcType=INTEGER},
      </if>
      <if test="operationType != null" >
        operation_type = #{operationType,jdbcType=INTEGER},
      </if>
    </set>
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="szu.library.cs.pojo.Circulation" >
    update circulation_t
    set staff_id = #{staffId,jdbcType=INTEGER},
      reader_id = #{readerId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=VARCHAR},
      borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      return_date = #{returnDate,jdbcType=TIMESTAMP},
      expect_date = #{expectDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      continue_times = #{continueTimes,jdbcType=INTEGER},
      operation_type = #{operationType,jdbcType=INTEGER}
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
</mapper>