<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="szu.library.cs.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="szu.library.cs.pojo.Book" >
    <id column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="publishing_house" property="publishingHouse" jdbcType="VARCHAR" />
    <result column="Publishing_date" property="publishingDate" jdbcType="TIMESTAMP" />
    <result column="reader_register_date" property="readerRegisterDate" jdbcType="TIMESTAMP" />
    <result column="Is_borrowed" property="isBorrowed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    book_id, type_id, book_name, author_name, publishing_house, Publishing_date, reader_register_date, 
    Is_borrowed
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select *, CASE is_borrowed WHEN '1' THEN '已借出' ELSE '未借出' END as isBorrowedName,book_type_t.type_name as typeName
    from book_t LEFT JOIN book_type_t on book_type_t.type_id=book_t.type_id
    where book_id = #{bookId,jdbcType=VARCHAR}
  </select>
  
     <select id="getLastest5" resultMap="BaseResultMap"  >
    SELECT book_t.* ,book_type_t.type_name as typeName
	from  reader_circulation_t LEFT JOIN book_t on book_t.book_id=reader_circulation_t.book_id LEFT JOIN book_type_t on book_type_t.type_id=book_t.type_id
	GROUP BY reader_circulation_t.book_id
	ORDER BY  reader_circulation_t.borrow_date
	LIMIT 5
  </select>
  
   <select id="queryByBookId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select *,CASE is_borrowed WHEN '1' THEN '已借出' ELSE '未借出' END as isBorrowedName,book_type_t.type_name as typeName
    from book_t LEFT JOIN book_type_t on book_type_t.type_id=book_t.type_id
    where book_id = #{bookId,jdbcType=VARCHAR}
  </select>
  
  <select id="queryByCriteria" parameterType="szu.library.cs.pojo.Book"  resultMap="BaseResultMap">  
    select *,CASE is_borrowed WHEN '1' THEN '已借出' ELSE '未借出' END as isBorrowedName,book_type_t.type_name as typeName
     from book_t LEFT JOIN book_type_t on book_type_t.type_id=book_t.type_id 
    <trim prefix="where" prefixOverrides="AND|OR">    
    <if test=" bookId != null and ''!=bookId ">  
    book_id = #{bookId}  
    </if>  
    <if test=" typeId != null and ''!=typeId " >  
    and book_t.type_id = #{typeId}  
    </if>  
    <if test=" bookName != null and ''!= bookName " >  
    and book_name = #{bookName}  
    </if>  
    <if test=" authorName != null and ''!= authorName " >  
    and author_name=#{authorName}  
    </if>  
    <if test=" publishingHouse != null and ''!= publishingHouse " >  
    and publishing_house=#{publishingHouse}  
    </if>  
    <if test=" isBorrowed != null and ''!= isBorrowed " >  
    and is_borrowed=#{isBorrowed}  
    </if> 
    
    </trim>     
</select>  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from book_t
    where book_id = #{bookId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="szu.library.cs.pojo.Book" >
    insert into book_t (book_id, type_id, book_name, 
      author_name, publishing_house, Publishing_date, 
      reader_register_date, Is_borrowed)
    values (#{bookId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{authorName,jdbcType=VARCHAR}, #{publishingHouse,jdbcType=VARCHAR}, #{publishingDate,jdbcType=TIMESTAMP}, 
      #{readerRegisterDate,jdbcType=TIMESTAMP}, #{isBorrowed,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="szu.library.cs.pojo.Book" >
    insert into book_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="authorName != null" >
        author_name,
      </if>
      <if test="publishingHouse != null" >
        publishing_house,
      </if>
      <if test="publishingDate != null" >
        Publishing_date,
      </if>
      <if test="readerRegisterDate != null" >
        reader_register_date,
      </if>
      <if test="isBorrowed != null" >
        Is_borrowed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="publishingHouse != null" >
        #{publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="publishingDate != null" >
        #{publishingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="readerRegisterDate != null" >
        #{readerRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isBorrowed != null" >
        #{isBorrowed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="szu.library.cs.pojo.Book" >
    update book_t
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="publishingHouse != null" >
        publishing_house = #{publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="publishingDate != null" >
        Publishing_date = #{publishingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="readerRegisterDate != null" >
        reader_register_date = #{readerRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isBorrowed != null" >
        Is_borrowed = #{isBorrowed,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="szu.library.cs.pojo.Book" >
    update book_t
    set type_id = #{typeId,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      publishing_house = #{publishingHouse,jdbcType=VARCHAR},
      Publishing_date = #{publishingDate,jdbcType=TIMESTAMP},
      reader_register_date = #{readerRegisterDate,jdbcType=TIMESTAMP},
      Is_borrowed = #{isBorrowed,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=VARCHAR}
  </update>
</mapper>